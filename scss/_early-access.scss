.eap {
  min-height: $panel-height;
  width: 100%;
  background: no-repeat center;
  background-size: cover;
  display: flex;
  color: $white;
  position: relative;

  &:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-image: linear-gradient($primary-color, #2a7cc7);
    opacity: 0.9;
  }

  .content {
    padding: map-get($vertical-spacing, small) map-get($side-margins, small);
    position: relative;
    width: 100%;
    @include flex-align-self(middle);

    @include breakpoint(medium up) {
      padding: map-get($vertical-spacing, medium) 0;
    }

    p {
      margin-bottom: map-get($vertical-spacing, small);

      @include breakpoint(medium) {
        margin-bottom: map-get($vertical-spacing, medium);
      }
    }
  }

  label {
    color: $white;
    position: relative;
    @include clearfix;
  }

  select, input:not([type=button], [type=submit]) {
    line-height: inherit;
    margin-top: rem-calc(8);
    height: rem-calc(48);
    padding-left: rem-calc(16);
    padding-right: rem-calc(16);
  }

  select {
    background-image: url(../images/ic-chevron-light-small.svg);
    background-size: 10px 7px;
    background-position: right center;
  }

  .button {
    @include button-style($white, auto, $primary-color);
    margin: (map-get($vertical-spacing, small) - rem-calc(24)) 0 0;
    @include breakpoint(medium) { margin-top: map-get($vertical-spacing, medium) - rem-calc(24); }
    line-height: 1;
  }

  // validation
  .is-invalid-input:not(:focus) {
    box-shadow: 0 0 0 2px $alert-color;
  }

  .form-error {
    width: 100%;
    @include horizontal-center;
    bottom: 100%;
    text-align: center;
    white-space: nowrap;
    background: $alert-color;
    color: $white;
    padding: rem-calc(12 16);
    margin: 0 0 rem-calc(8);
    border-radius: $global-radius;

    &.hidden {
      display: none !important;
    }

    @include breakpoint(medium down) {
      &:after {
        @include horizontal-center;
        top: 100%;
        @include css-triangle(rem-calc(8), $alert-color, down);
      }
    }

    @include breakpoint(medium) {
      width: auto;
    }

    @include breakpoint(large) {
      text-align: left;
      width: calc(50% - #{map-get($grid-column-gutter, medium)} / 2);
      transform: none;
      bottom: rem-calc(24);
      margin-bottom: 0;
      left: calc(100% + #{map-get($grid-column-gutter, small)});

      &:after {
        @include vertical-center;
        right: 100%;
        @include css-triangle(rem-calc(8), $alert-color, left);
      }
    }
  }

  .medium-6.columns {
    @include breakpoint(large) {
      &:first-child .form-error {
        left: calc(200% + #{map-get($grid-column-gutter, small)} * 2);
      }
      .form-error {
        width: 100%;
      }
    }
  }

  // fix foundation specificity bug
  .small-collapse .row {
    @include breakpoint(medium up) {
      @include grid-row-nest;
    }
  }
}
