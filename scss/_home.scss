.home {
  background: $primary-color;

  .hero {
    position: relative;
    width: 100%; // fixes weird layout bug
    background-image: linear-gradient($primary-color, #2a7cc7);

    h1 {
      font-weight: $global-weight-normal;
    }

    .more-arrow {
      position: absolute;
      left: 0;
      bottom: rem-calc(36);
      width: 100%;
    }
  }

  .pager {
    position: fixed;
    z-index: 1;
    top: $header-height;
    width: rem-calc(26);
    right: map-get($side-margins, medium) - rem-calc(8);
    height: $panel-height;
    display: flex;
    pointer-events: none;

    @include breakpoint(large up) {
      right: map-get($side-margins, large) - rem-calc(8);
    }

    .menu {
      @include flex-align-self(middle);
      pointer-events: auto;
    }

    li {
      margin: 0;
    }

    a {
      height: rem-calc(26);
      line-height: rem-calc(26);
      width: rem-calc(26);
    }

    i {
      margin: 0;
      width: rem-calc(10);
      height: rem-calc(10);
      border: solid rem-calc(1.5) $white;
      border-radius: rem-calc(5);
    }

    .active i {
      background: $white;
    }
  }

  section, article {
    background: no-repeat center;
    background-size: cover;
    height: $panel-height;
    color: $white;
    @include flex;
    position: relative;
    padding: rem-calc(24 0);

    .product-icon {
      order: 1;
      margin-top: rem-calc(-24);
      @include breakpoint(large) { margin-top: rem-calc(-36); }
      color: $white;

      .sticky-content {
        @include side-margins(padding-top padding-right padding-bottom);
        @each $size, $margin in $side-margins {
          @include breakpoint($size) { margin-left: -(rem-calc(44) + $margin); }
        }
      }

      circle { stroke: currentColor; }
      path { fill: currentColor; }
    }


    h2 {
      @each $size, $headers in $header-styles {
        @include breakpoint($size) {
          font-size: rem-calc(map-deep-get($header-styles, $size, 'h1', 'font-size'));
          line-height: map-deep-get($header-styles, $size, 'h1', 'letter-spacing');
        }
      }
      margin-bottom: rem-calc(24);
    }

    .content {
      width: 100%;
      @include flex-align-self(middle);
    }

    .button-group {
      margin: 0 rem-calc(-8 -16);
    }

    .button {
      margin: rem-calc(0 8 16);

      &:last-child {
        margin-right: rem-calc(8);
      }

      &.secondary {
        @include button-style($white, auto, $primary-color);
      }
    }

    @include breakpoint(medium up) {
      padding: rem-calc(36 0);
    }
  }

  // Use the vertical layout for medium-sized portrait screens
  @media screen and #{breakpoint(medium only)} and #{breakpoint(portrait)} {
    .image-interest-left { background-position: 25%; }
    .image-interest-right { background-position: 75%; }
    article .content { @include flex-align-self(bottom); }
    .content .medium-6.columns { @include grid-column-offset(3); }
  }

  @include breakpoint(small only) {
    .image-interest-left { background-position: 25%; }
    .image-interest-right { background-position: 75%; }
    article .content { @include flex-align-self(bottom); }
  }
}
