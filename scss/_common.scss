// Variables
$topbar-height: rem-calc(72);
$headband-height: rem-calc(8);
$header-height: $topbar-height + $headband-height;
$panel-height: calc(100vh - #{$header-height});

$side-margins: (
  small: rem-calc(20),
  medium: rem-calc(24),
  large: rem-calc(30)
);

// Responsive margins
@mixin side-margins($properties: padding-left padding-right) {
  @each $size, $value in $side-margins {
    @if ($size == 'small') {
      @each $prop in $properties {
        #{$prop}: $value;
      }
    } @else {
      @include breakpoint($size up) {
        @each $prop in $properties {
          #{$prop}: $value;
        }
      }
    }
  }
}

// Style overrides
.button {
  font-family: inherit;
  text-transform: uppercase;
  font-weight: $global-weight-bold;
  letter-spacing: rem-calc(0.8);

  @include breakpoint(medium up) {
    padding-left: rem-calc(24);
    padding-right: rem-calc(24);
  }
}

html.is-reveal-open, html.is-reveal-open body {
  position: static; // don't scroll page when reveal modal is open
  min-width: 100%; // fix layout bug when reveal is used
}

.reveal {
  top: 50vh !important;
  transform: translateY(-50%);

  .button {
    margin: rem-calc(8 0 0);
  }

  .close-button {
    font-size: inherit;
    top: 1rem;
  }

  @include breakpoint(small only) {
    height: auto;
    min-height: auto;
    left: auto;
    margin-left: auto;
    width: calc(100vw - #{map-get($side-margins, small)} * 2);
  }

  .content {
    position: relative;
    background: $white;
    padding: rem-calc(36 20);

    @include breakpoint(medium up) {
      padding: rem-calc(60);
    }
  }
}
