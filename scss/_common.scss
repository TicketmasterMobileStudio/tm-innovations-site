// Variables
$topbar-height: rem-calc(72);
$headband-height: rem-calc(8);
$header-height: $topbar-height + $headband-height;
$panel-height: calc(100vh - #{$header-height});
$primary-color-dark: #2a7cc7; // for gradient endpoint

// Responsive spacing for top
$vertical-spacing: (
  small: rem-calc(36),
  medium: rem-calc(60)
);

// Responsive spacing for sides
$side-margins: (
  small: rem-calc(20),
  medium: rem-calc(24),
  large: rem-calc(30)
);

// Responsive margins
@mixin side-margins($properties: padding-left padding-right) {
  @each $size, $value in $side-margins {
    @if ($size == 'small') {
      @each $prop in $properties {
        #{$prop}: $value;
      }
    } @else {
      @include breakpoint($size up) {
        @each $prop in $properties {
          #{$prop}: $value;
        }
      }
    }
  }
}

// Style overrides
.button {
  font-family: inherit;
  font-weight: $global-weight-bold;
  letter-spacing: rem-calc(.8);
  text-transform: uppercase;

  @include breakpoint(medium up) {
    padding-left: rem-calc(24);
    padding-right: rem-calc(24);
  }
}

html {
  &.is-reveal-open {
    &,
    body {
      min-width: 100%; // fix layout bug when reveal is used
      position: static; // don't scroll page when reveal modal is open
    }
  }
}

.reveal-overlay {
  overflow-y: auto;
}

.reveal {
  top: 50vh;
  transform: translateY(-50%);

  .button {
    margin: rem-calc(8 0 0);
  }

  .close-button {
    font-size: inherit;
    top: 1rem;
  }

  @include breakpoint(small only) {
    height: auto;
    left: auto;
    margin-left: auto;
    min-height: auto;
    width: calc(100vw - #{map-get($side-margins, small)} * 2);
  }

  .content {
    background: $white;
    padding: rem-calc(36 20);
    position: relative;

    @include breakpoint(medium up) {
      padding: rem-calc(60);
    }
  }
}

.feature {
  @include clearfix;
  padding-left: 2.5rem;

  [class^='fi-'] {
    color: $light-gray;
    float: left;
    font-size: 2rem;
    line-height: 1;
    margin: -.3rem 1rem 0 -2.5rem;
  }
}
